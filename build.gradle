buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// for code test coverage
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

group = 'com.woowahan.techcamp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

jacocoTestReport {
	reports {
		xml.enabled = true // coveralls plugin depends on xml format report
		html.enabled = true
	}
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.security:spring-security-core:5.0.6.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-web')
	runtime('org.springframework.boot:spring-boot-devtools')
	compile('pl.allegro.tech.boot:handlebars-spring-boot-starter:0.3.0')
	compile('io.springfox:springfox-swagger2:2.6.1')
	compile('io.springfox:springfox-swagger-ui:2.6.1')
	runtime('mysql:mysql-connector-java:8.0.12')
	runtime('com.h2database:h2')
	compileOnly('org.projectlombok:lombok')

	// Refer: https://github.com/spring-projects/spring-security-oauth/issues/441#issuecomment-345188476
	testCompile('org.apache.httpcomponents:httpclient')
	testCompile('org.assertj:assertj-core:3.10.0')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
